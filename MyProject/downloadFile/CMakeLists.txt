# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.13.0)
project(downloadFile LANGUAGES C CXX ASM)

# target
add_executable(downloadFile "")
set_target_properties(downloadFile PROPERTIES OUTPUT_NAME "downloadFile")
set_target_properties(downloadFile PROPERTIES RUNTIME_OUTPUT_DIRECTORY "build/mingw/x86_64/release")
target_include_directories(downloadFile PRIVATE
    src
    build
    D:/Program/Qt/5.15.0/mingw81_64/include/QtCore
    D:/Program/Qt/5.15.0/mingw81_64/include/QtNetwork
    D:/Program/Qt/5.15.0/mingw81_64/include/QtGui
    D:/Program/Qt/5.15.0/mingw81_64/include/QtWidgets
    D:/Program/Qt/5.15.0/mingw81_64/include
    D:/Program/Qt/5.15.0/mingw81_64/mkspecs/win32-g++
)
target_compile_definitions(downloadFile PRIVATE
    QT_NO_DEBUG
    QT_DEPRECATED_WARNINGS
    QT_CORE_LIB
    QT_NETWORK_LIB
    QT_GUI_LIB
    QT_WIDGETS_LIB
)
set_property(TARGET downloadFile PROPERTY CXX_STANDARD 11)
target_compile_options(downloadFile PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-fPIC>
    $<$<COMPILE_LANGUAGE:CXX>:-fPIC>
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
)
if(MSVC)
    target_compile_options(downloadFile PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(downloadFile PRIVATE -O3)
endif()
target_link_libraries(downloadFile PRIVATE
    Qt5Core
    Qt5Network
    Qt5Gui
    Qt5Widgets
    qtfreetype
    qtlibpng
    qtmain
    mingw32
)
target_link_directories(downloadFile PRIVATE
    D:/Program/Qt/5.15.0/mingw81_64/lib
)
target_link_options(downloadFile PRIVATE
    -mwindows
    -m64
)
target_sources(downloadFile PRIVATE
    src/DownloadManager.cpp
    src/main.cpp
    src/DownloadManager.h
)

